#!/bin/bash
set -e

echo "üîê [pre-commit] Gitleaks scan started..."

# Check if gitleaks is enabled
ENABLED=$(git config --bool gitleaks.enable || echo "true")
if [ "$ENABLED" != "true" ]; then
  echo "üîï Gitleaks is disabled via git config"
  exit 0
fi

# Check if gitleaks is installed
if ! command -v gitleaks &>/dev/null; then
  echo "‚ùå Gitleaks is not installed or not found in PATH."
  echo "   Please run ./install-gitleaks-hook.sh to install it."
  exit 1
fi

# Show version
echo "üì¶ Gitleaks version: $(gitleaks version)"
echo "üîé Scanning files..."

# Get list of staged files
FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -v "^\.git/" || true)

if [ -z "$FILES" ]; then
  echo "‚ÑπÔ∏è No staged files to scan."
  exit 0
fi

HAS_LEAKS=0

for file in $FILES; do
  if [ -f "$file" ]; then
    echo "üîç Scanning $file"
    if ! gitleaks detect --no-git --source "$file" --no-banner --redact > /dev/null; then
      echo "‚ùó Potential secrets found in: $file"
      HAS_LEAKS=1
    fi
  fi
done

if [ "$HAS_LEAKS" -ne 0 ]; then
  echo "‚ùå Commit blocked: Gitleaks detected secrets."
  echo "‚ÑπÔ∏è  You can disable the hook with: git config gitleaks.enable false"
  exit 1
fi

echo "‚úÖ No secrets found. Proceeding with commit."
exit 0
